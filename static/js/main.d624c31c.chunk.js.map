{"version":3,"sources":["components/useForm.js","components/validateInfo.js","components/Form.js","components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","props","validate","useState","name","email","phoneNumber","dob","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","axios","post","then","response","status","history","push","catch","error","console","log","data","handleChange","event","target","value","handleSubmit","preventDefault","validateInfo","trim","validator","isEmail","age","Date","today","getFullYear","getMonth","getDate","getTime","useStyles","makeStyles","theme","root","display","width","minWidth","alignItems","justifyContent","alignSelf","justify","margin","spacing","Form","classes","className","noValidate","onSubmit","TextField","id","label","variant","onChange","helperText","type","Button","color","size","Users","allUsers","SetAllUsers","get","res","alert","map","val","index","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d624c31c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n// import validate from './validateInfo'\nimport axios from 'axios'\n\nconst useForm = (props, validate) => {\n\tconst [values, setValues] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tphoneNumber: '',\n\t\tdob: ''\n\t})\n\tconst [errors, setErrors] = useState({})\n\tconst [isSubmitting, setIsSubmitting] = useState(false)\n\n\t// handle changes on input fields\n\t// updating values\n\tconst handleChange = (event) => {\n\t\tconst { value, name } = event.target\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[name]: value,\n\t\t})\n\t\t// console.log(values);\n\t\t// \tsetErrors(validate(values))\n\t\t// console.log(errors)\n\t}\n\n\t// handling form submission\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tsetErrors(validate(values))\n\t\tsetIsSubmitting(true);\n\t}\n\t\n\tfunction submitToApi(){\n\t\t\taxios\n\t\t\t\t.post(\"https://plabs-react.herokuapp.com/\", values)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t\tprops.history.push(\"/users\");\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.log('error occured', error.response)\n\t\t\t\t\t// alert('error occured')\n\t\t\t\t\tsetErrors({...errors, 'phoneNumber': error.response.data})\n\t\t\t\t\t// console.log(errors)\n\t\t\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (Object.keys(errors).length === 0 && isSubmitting) {\n\t\tsubmitToApi();\n\t\t}\n\t}, [errors]);\n\treturn { values, handleChange, handleSubmit, errors }\n}\n\nexport default useForm;","import validator from 'validator'\n\nexport default function validateInfo(values){\n\tlet errors = {}\n\tif (!values.name.trim()) {\n\t\terrors.name = 'Name required'\n\t}\n\n\t// validating email\n\tif (!values.email) {\n\t\terrors.email = 'Email required'\n\t} else if (!validator.isEmail(values.email)) {\n\t\terrors.email = 'Email address is invalid'\n\t}\n\n\t// validating dob\n\tif (!values.dob) {\n\t\terrors.dob = 'DOB required'\n\t} else {\n\t\tvar age = new Date(values.dob)\n\t\tvar today = new Date()\n\t\t// date before 18 years from today\n\t\tvar before = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate())\n\n\t\t// console.log(before, event.target.value)\n\t\t// console.log(before.getTime() > age.getTime())\n\t\t// console.log(event.target.name)\n\t\tif (before.getTime() < age.getTime()) {\n\t\t\terrors.dob = 'You should be 18 years old'\n\t\t\t// console.log(values.dob)\n\t\t}\n\t}\n\treturn errors;\n}\n\n// export default validateInfo;","import React from 'react';\nimport useForm from './useForm'\nimport validate from './validateInfo'\nimport TextField from '@material-ui/core/TextField';\nimport { Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"block\",\n\t\twidth: '100%',\n\t\tminWidth: 120,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\talignSelf: 'center',\n\t\tjustify: 'center',\n\t\t'& .MuiTextField-root': {\n\t\t\t// alignItems: \"center\",\n\t\t\tmargin: theme.spacing(2),\n\t\t\t// width: 100,\n\t\t\t// justifyContent: \"center\"\n\t\t},\n\t},\n}));\n\nconst Form = (props) => {\n\tconst{values, handleChange, handleSubmit, errors} = useForm(props, validate)\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<form className={classes.root} noValidate onSubmit={handleSubmit}>\n\t\t<div>\n\t\t\t<TextField error={errors.name ? true : false} id=\"name\" label=\"Name\" variant=\"outlined\" name=\"name\" onChange={handleChange} helperText={errors.name} value={values.name} />\n\n\t\t</div>\n\t\t<div>\n\t\t\t<TextField error={errors.email ? true : false} id=\"email\" label=\"Email\" variant=\"outlined\" name=\"email\" onChange={handleChange} helperText={errors.email} value={values.email} />\n\t\t</div>\n\t\t<div>\n\n\t\t\t<TextField error={errors.phoneNumber ? true : false} id=\"phoneNumber\" label=\"Phone Number\" variant=\"outlined\" name=\"phoneNumber\" onChange={handleChange} value={values.phoneNumber} helperText={errors.phoneNumber} />\n\t\t</div>\n\t\t<div>\n\t\t\t<TextField error={errors.dob ? true : false} id=\"dob\" type=\"date\" variant=\"outlined\" name=\"dob\" onChange={handleChange} helperText={errors.dob} value={values.dob}/>\n\t\t</div>\n\t\t<div>\n\t\t\t<Button\n\t\t\t\t// disabled={disable}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tsize=\"medium\"\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</Button>\n\n\n\t\t</div>\n\t</form>\n\t);\n}\nexport default Form;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst Users = () => {\n\tconst [allUsers, SetAllUsers] = useState([])\n\tuseEffect(() => {\n\t\taxios.get(\"https://plabs-react.herokuapp.com/users\")\n\t\t\t.then(res => SetAllUsers(res.data))\n\t\t\t.catch(error => alert('error', error))\n\t}, [])\n\treturn (\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t<th>Phone Number</th>\n\t\t\t\t\t<th>Date of Birth</th>\n\t\t\t\t</tr>\n\t\t\t\t{\n\n\t\t\t\t\tallUsers.map((val, index) => (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t<td>{val.name}</td>\n\t\t\t\t\t\t<td>{val.email}</td>\n\t\t\t\t\t\t<td>{val.phoneNumber}</td>\n\t\t\t\t\t\t<td>{val.dob}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nexport default Users;","import './App.css';\nimport Form from './components/Form';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Users from './components/Users'\n\nfunction App() {\n  return (\n    <Router>\n\n    <div className=\"App\">\n      {/* <div><h1>hello</h1></div> */}\n      <Switch>\n        <Route \n        path=\"/plabs-react\"\n        exact\n        component={Form}\n        />\n        <Route\n        path=\"/plabs-react/users\"\n        exact\n        component={Users}\n        // render={(props) => }\n        />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}